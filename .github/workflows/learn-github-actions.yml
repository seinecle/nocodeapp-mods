name: Build for Release

on:
  [push]

env:
  pkg-name: 'nocode-app'
  pkg-version: '1.0'

jobs:
  windows-msi-installer-creation:
    runs-on: [windows-latest]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v1
      with:
        java-version: '15'
        java-package: jdk
        architecture: x64

    - name: View artifacts
      run: dir

    - name: run jlink
      run: "jlink --no-header-files --no-man-pages --module-path win/core --add-modules net.clementlevallois.nocodeapp.core --bind-services --output image --compress=1"

    - name: run jpackage
      run: "jpackage --type msi --win-menu --win-menu-group ${{ env.pkg-name }} --win-dir-chooser --win-shortcut --win-dir-chooser --win-console -n ${{ env.pkg-name }} --module-path win/core --runtime-image image -m net.clementlevallois.nocodeapp.core/net.clementlevallois.nocodeappcore.controller.RealMain"

    - name: View artifacts
      run: dir

    - name: upload msi installer to temp github action working folder
      uses: actions/upload-artifact@v2
      with:
        name: msi
        path: "${{ env.pkg-name }}-${{ env.pkg-version }}.msi"
        if-no-files-found: warn
    - name: create release for msi installer
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
      with:
        tag_name: ${{ env.pkg-name }}-windows-${{ env.pkg-version }}.0.1
        release_name: Release ${{ env.pkg-name }}--windows-${{ env.pkg-version }}.0.1
        body: |
          Changes in this Release
          - alpha version
          - not stable
        draft: false
        prerelease: false
          
    - name: Upload Release Asset to release page
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: "./${{ env.pkg-name }}-${{ env.pkg-version }}.msi"
        asset_name: ${{ env.pkg-name }}-${{ env.pkg-version }}.msi
        asset_content_type: application/x-ole-storage